rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Logbook rules - More permissive for development
    match /logbook/{entryId} {
      // Allow read and write for all authenticated users during development
      allow read, write: if isAuthenticated();
      
      // Production rules (commented out for now)
      // allow read: if isAuthenticated() && isOwner(resource.data.userId);
      // allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      // allow update: if isAuthenticated() && isOwner(resource.data.userId);
      // allow delete: if isAuthenticated() && isOwner(resource.data.userId);
    }
    
    // Vehicle rules
    match /vehicles/{vehicleId} {
      // Allow read for all authenticated users
      allow read: if isAuthenticated();
      
      // Allow write for authenticated users during development
      allow write: if isAuthenticated();
      
      // Production rule (commented out for now)
      // allow write: if isAuthenticated() && request.auth.token.admin == true;
    }
  }
}